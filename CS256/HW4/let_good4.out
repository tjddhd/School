TOKEN: LPAREN    LEXEME: (
TOKEN: LET       LEXEME: let

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f0
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: RPAREN    LEXEME: )
TOKEN: INTCONST  LEXEME: 0
EXPR -> INTCONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( ID EXPR )
___Adding f0 to symbol table
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f1
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: IDENT     LEXEME: x
ID_LIST -> ID_LIST ID
___Adding x to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: INTCONST  LEXEME: 1
EXPR -> INTCONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( ID EXPR )
___Adding f1 to symbol table
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: fn
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: IDENT     LEXEME: x1
ID_LIST -> ID_LIST ID
___Adding x1 to symbol table
TOKEN: IDENT     LEXEME: x2
ID_LIST -> ID_LIST ID
___Adding x2 to symbol table
TOKEN: IDENT     LEXEME: x3
ID_LIST -> ID_LIST ID
___Adding x3 to symbol table
TOKEN: IDENT     LEXEME: x4
ID_LIST -> ID_LIST ID
___Adding x4 to symbol table
TOKEN: IDENT     LEXEME: x5
ID_LIST -> ID_LIST ID
___Adding x5 to symbol table
TOKEN: IDENT     LEXEME: x6
ID_LIST -> ID_LIST ID
___Adding x6 to symbol table
TOKEN: IDENT     LEXEME: x7
ID_LIST -> ID_LIST ID
___Adding x7 to symbol table
TOKEN: IDENT     LEXEME: x8
ID_LIST -> ID_LIST ID
___Adding x8 to symbol table
TOKEN: IDENT     LEXEME: x9
ID_LIST -> ID_LIST ID
___Adding x9 to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: STRCONST  LEXEME: "nine"
EXPR -> STRCONST
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( ID EXPR )
___Adding fn to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f0
EXPR -> ID
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f1
EXPR -> ID
TOKEN: INTCONST  LEXEME: 1
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: fn
EXPR -> ID
TOKEN: INTCONST  LEXEME: 1
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 2
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 3
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 4
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 5
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 6
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 7
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 8
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 9
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
EXPR_LIST -> EXPR EXPR_LIST
EXPR_LIST -> EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let ( ID_EXPR_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR

---- Completed parsing ----

