TOKEN: LPAREN    LEXEME: (
TOKEN: LET       LEXEME: let

___Entering new scope...

TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: x
TOKEN: INTCONST  LEXEME: 0
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( ID EXPR )
___Adding x to symbol table
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: IF        LEXEME: if
TOKEN: IDENT     LEXEME: x
EXPR -> ID
TOKEN: STRCONST  LEXEME: "hello"
EXPR -> STRCONST
TOKEN: INTCONST  LEXEME: 20
EXPR -> INTCONST
IF_EXPR -> if EXPR EXPR EXPR
PARENTHESIZED_EXPR -> IF_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let ( ID_EXPR_LIST ) EXPR

___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR

---- Completed parsing ----

