TOKEN: LPAREN    LEXEME: (
TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *
OP -> *
TOKEN: INTCONST  LEXEME: 5
EXPR -> INTCONST
TOKEN: INTCONST  LEXEME: 14
EXPR -> INTCONST
ARITHMETIC_EXPR -> OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHMETIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: LET       LEXEME: let
TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: x
TOKEN: INTCONST  LEXEME: 5
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: y
TOKEN: INTCONST  LEXEME: 6
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f
TOKEN: LPAREN    LEXEME: (
TOKEN: LAMBDA    LEXEME: lambda
TOKEN: LPAREN    LEXEME: (
ID_LIST -> epsilon
TOKEN: IDENT     LEXEME: a
ID_LIST -> ID_LIST IDENT
TOKEN: IDENT     LEXEME: b
ID_LIST -> ID_LIST IDENT
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: MULT      LEXEME: *
OP -> *
TOKEN: IDENT     LEXEME: a
EXPR -> IDENT
TOKEN: IDENT     LEXEME: b
EXPR -> IDENT
ARITHMETIC_EXPR -> OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHMETIC_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
LAMBDA_EXPR -> lambda ( ID_LIST ) EXPR
PARENTHESIZED_EXPR -> LAMBDA_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: f
EXPR -> IDENT
TOKEN: IDENT     LEXEME: x
EXPR -> IDENT
TOKEN: IDENT     LEXEME: y
EXPR -> IDENT
TOKEN: RPAREN    LEXEME: )
EXPR_LIST -> EXPR
EXPR_LIST -> N_EXPR EXPR_LIST
EXPR_LIST -> N_EXPR EXPR_LIST
PARENTHESIZED_EXPR -> EXPR_LIST
EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let ( ID_EXPR_LIST ) EXPR
PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: LPAREN    LEXEME: (
TOKEN: IF        LEXEME: if
TOKEN: STRCONST  LEXEME: "1234"
EXPR -> STRCONST
TOKEN: INTCONST  LEXEME: 2
EXPR -> INTCONST
TOKEN: RPAREN    LEXEME: )
Line 9: syntax error
